syntax = "proto3";

package google.cloud.apigee.registry.v1alpha1;

import "registry_models.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.cloud.apigee.registry.v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "RegistryServiceProto";
option go_package = "apigov.dev/registry/rpc;rpc";

// The Registry API provides structures and relationships for
// API Governance and Lifecycle Management.
service Registry {
  option (google.api.default_host) = "registry.googleapis.com";

  // ListProjects returns matching projects.
  // (-- api-linter: standard-methods=disabled --)
  // (-- api-linter: core::0132::method-signature=disabled
  //     aip.dev/not-precedent: the organization is the implicit parent. --)
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/projects"
    };
  }

  // GetProject returns a specified project.
  rpc GetProject(GetProjectRequest) returns (Project) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateProject creates a specified project.
  // (-- api-linter: standard-methods=disabled --)
  // (-- api-linter: core::0133::http-uri-parent=disabled
  //     aip.dev/not-precedent: Project has an implicit parent. --)
  // (-- api-linter: core::0133::method-signature=disabled
  //     aip.dev/not-precedent: Project has an implicit parent. --)
  rpc CreateProject(CreateProjectRequest) returns (Project) {
    option (google.api.http) = {
      post : "/v1alpha1/projects"
      body : "project"
    };
    option (google.api.method_signature) = "project,project_id";
  }

  // UpdateProject can be used to modify a specified project.
  rpc UpdateProject(UpdateProjectRequest) returns (Project) {
    option (google.api.http) = {
      patch : "/v1alpha1/{project.name=projects/*}"
      body : "project"
    };
    option (google.api.method_signature) = "project,update_mask";
  }

  // DeleteProject removes a specified project and all of the resources that it
  // owns.
  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListProducts returns matching products.
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{parent=projects/*}/products"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetProduct returns a specified product.
  rpc GetProduct(GetProductRequest) returns (Product) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*/products/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateProduct creates a specified product.
  rpc CreateProduct(CreateProductRequest) returns (Product) {
    option (google.api.http) = {
      post : "/v1alpha1/{parent=projects/*}/products"
      body : "product"
    };
    option (google.api.method_signature) = "parent,product,product_id";
  }

  // UpdateProduct can be used to modify a specified product.
  rpc UpdateProduct(UpdateProductRequest) returns (Product) {
    option (google.api.http) = {
      patch : "/v1alpha1/{product.name=projects/*/products/*}"
      body : "product"
    };
    option (google.api.method_signature) = "product,update_mask";
  }

  // DeleteProduct removes a specified product and all of the resources that it
  // owns.
  rpc DeleteProduct(DeleteProductRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*/products/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListVersions returns matching versions.
  rpc ListVersions(ListVersionsRequest) returns (ListVersionsResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{parent=projects/*/products/*}/versions"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetVersion returns a specified version.
  rpc GetVersion(GetVersionRequest) returns (Version) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*/products/*/versions/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateVersion creates a specified version.
  rpc CreateVersion(CreateVersionRequest) returns (Version) {
    option (google.api.http) = {
      post : "/v1alpha1/{parent=projects/*/products/*}/versions"
      body : "version"
    };
    option (google.api.method_signature) = "parent,version,version_id";
  }

  // UpdateVersion can be used to modify a specified version.
  rpc UpdateVersion(UpdateVersionRequest) returns (Version) {
    option (google.api.http) = {
      patch : "/v1alpha1/{version.name=projects/*/products/*/versions/*}"
      body : "version"
    };
    option (google.api.method_signature) = "version,update_mask";
  }

  // DeleteVersion removes a specified version and all of the resources that it
  // owns.
  rpc DeleteVersion(DeleteVersionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*/products/*/versions/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListSpecs returns matching specs.
  rpc ListSpecs(ListSpecsRequest) returns (ListSpecsResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{parent=projects/*/products/*/versions/*}/specs"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetSpec returns a specified spec.
  rpc GetSpec(GetSpecRequest) returns (Spec) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*/products/*/versions/*/specs/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateSpec creates a specified spec.
  rpc CreateSpec(CreateSpecRequest) returns (Spec) {
    option (google.api.http) = {
      post : "/v1alpha1/{parent=projects/*/products/*/versions/*}/specs"
      body : "spec"
    };
    option (google.api.method_signature) = "parent,spec,spec_id";
  }

  // UpdateSpec can be used to modify a specified spec.
  rpc UpdateSpec(UpdateSpecRequest) returns (Spec) {
    option (google.api.http) = {
      patch : "/v1alpha1/{spec.name=projects/*/products/*/versions/*/specs/*}"
      body : "spec"
    };
    option (google.api.method_signature) = "spec,update_mask";
  }

  // DeleteSpec removes a specified spec and all of the resources that it
  // owns.
  rpc DeleteSpec(DeleteSpecRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*/products/*/versions/*/specs/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListProperties returns matching properties.
  rpc ListProperties(ListPropertiesRequest) returns (ListPropertiesResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{parent=projects/*}/properties"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetProperty returns a specified property.
  rpc GetProperty(GetPropertyRequest) returns (Property) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*/properties/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateProperty creates a specified property.
  rpc CreateProperty(CreatePropertyRequest) returns (Property) {
    option (google.api.http) = {
      post : "/v1alpha1/{parent=projects/*}/properties"
      body : "property"
    };
    option (google.api.method_signature) = "parent,property,property_id";
  }

  // UpdateProperty can be used to modify a specified property.
  rpc UpdateProperty(UpdatePropertyRequest) returns (Property) {
    option (google.api.http) = {
      patch : "/v1alpha1/{property.name=projects/*/properties/*}"
      body : "property"
    };
    option (google.api.method_signature) = "property,update_mask";
  }

  // DeleteProperty removes a specified property and all of the resources that it
  // owns.
  rpc DeleteProperty(DeletePropertyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*/properties/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListLabels returns matching labels.
  rpc ListLabels(ListLabelsRequest) returns (ListLabelsResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{parent=projects/*}/labels"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetLabel returns a specified label.
  rpc GetLabel(GetLabelRequest) returns (Label) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=projects/*/labels/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateLabel creates a specified label.
  rpc CreateLabel(CreateLabelRequest) returns (Label) {
    option (google.api.http) = {
      post : "/v1alpha1/{parent=projects/*}/labels"
      body : "label"
    };
    option (google.api.method_signature) = "parent,label,label_id";
  }

  // UpdateLabel can be used to modify a specified label.
  rpc UpdateLabel(UpdateLabelRequest) returns (Label) {
    option (google.api.http) = {
      patch : "/v1alpha1/{label.name=projects/*/labels/*}"
      body : "label"
    };
    option (google.api.method_signature) = "label,update_mask";
  }

  // DeleteLabel removes a specified label and all of the resources that it
  // owns.
  rpc DeleteLabel(DeleteLabelRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1alpha1/{name=projects/*/labels/*}"
    };
    option (google.api.method_signature) = "name";
  }

}

// Request message for ListProjects.
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: the parent of Project is implicit. --)
message ListProjectsRequest {
  // The maximum number of projects to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListProjects` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProjects` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListProjects.
message ListProjectsResponse {
  // The projects from the specified publisher.
  repeated Project projects = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetProject.
message GetProjectRequest {
  // The name of the project to retrieve.
  // Format: projects/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Project"
    }
  ];
}

// Request message for CreateProject.
// (-- api-linter: core::0133::request-parent-required=disabled
//     aip.dev/not-precedent: the parent of Project is implicit. --)
message CreateProjectRequest {
  // The project to create.
  Project project = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the project, which will become the final component of
  // the project's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string project_id = 3;
}

// Request message for UpdateProject.
message UpdateProjectRequest {
  // The project to update.
  //
  // The `name` field is used to identify the project to update.
  // Format: projects/*
  Project project = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteProject.
message DeleteProjectRequest {
  // The name of the project to delete.
  // Format: projects/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Project"}
  ];
}

// Request message for ListProducts.
message ListProductsRequest {
  // The parent, which owns this collection of products.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Product"}
  ];
  // The maximum number of products to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListProducts` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProducts` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListProducts.
message ListProductsResponse {
  // The products from the specified publisher.
  repeated Product products = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetProduct.
message GetProductRequest {
  // The name of the product to retrieve.
  // Format: projects/*/products/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Product"
    }
  ];
}

// Request message for CreateProduct.
message CreateProductRequest {
  // The parent, which owns this collection of products.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Product"}
  ];
  // The product to create.
  Product product = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the product, which will become the final component of
  // the product's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string product_id = 3;
}

// Request message for UpdateProduct.
message UpdateProductRequest {
  // The product to update.
  //
  // The `name` field is used to identify the product to update.
  // Format: projects/*/products/*
  Product product = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteProduct.
message DeleteProductRequest {
  // The name of the product to delete.
  // Format: projects/*/products/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Product"}
  ];
}

// Request message for ListVersions.
message ListVersionsRequest {
  // The parent, which owns this collection of versions.
  // Format: projects/*/products/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Version"}
  ];
  // The maximum number of versions to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListVersions` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListVersions` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListVersions.
message ListVersionsResponse {
  // The versions from the specified publisher.
  repeated Version versions = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetVersion.
message GetVersionRequest {
  // The name of the version to retrieve.
  // Format: projects/*/products/*/versions/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Version"
    }
  ];
}

// Request message for CreateVersion.
message CreateVersionRequest {
  // The parent, which owns this collection of versions.
  // Format: projects/*/products/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Version"}
  ];
  // The version to create.
  Version version = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the version, which will become the final component of
  // the version's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string version_id = 3;
}

// Request message for UpdateVersion.
message UpdateVersionRequest {
  // The version to update.
  //
  // The `name` field is used to identify the version to update.
  // Format: projects/*/products/*/versions/*
  Version version = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteVersion.
message DeleteVersionRequest {
  // The name of the version to delete.
  // Format: projects/*/products/*/versions/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Version"}
  ];
}

// Request message for ListSpecs.
message ListSpecsRequest {
  // The parent, which owns this collection of specs.
  // Format: projects/*/products/*/versions/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Spec"}
  ];
  // The maximum number of specs to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListSpecs` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListSpecs` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;

  // The level of detail to return (defaults to BASIC).
  SpecView view = 5;
}

// Response message for ListSpecs.
message ListSpecsResponse {
  // The specs from the specified publisher.
  repeated Spec specs = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetSpec.
message GetSpecRequest {
  // The name of the spec to retrieve.
  // Format: projects/*/products/*/versions/*/specs/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Spec"
    }
  ];

  // The level of detail to return (defaults to BASIC).
  SpecView view = 2;
}

// Request message for CreateSpec.
message CreateSpecRequest {
  // The parent, which owns this collection of specs.
  // Format: projects/*/products/*/versions/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Spec"}
  ];
  // The spec to create.
  Spec spec = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the spec, which will become the final component of
  // the spec's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string spec_id = 3;
}

// Request message for UpdateSpec.
message UpdateSpecRequest {
  // The spec to update.
  //
  // The `name` field is used to identify the spec to update.
  // Format: projects/*/products/*/versions/*/specs/*
  Spec spec = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteSpec.
message DeleteSpecRequest {
  // The name of the spec to delete.
  // Format: projects/*/products/*/versions/*/specs/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Spec"}
  ];
}

// Request message for ListProperties.
message ListPropertiesRequest {
  // The parent, which owns this collection of properties.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Property"}
  ];
  // The maximum number of properties to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListProperties` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProperties` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListProperties.
message ListPropertiesResponse {
  // The properties from the specified publisher.
  repeated Property properties = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetProperty.
message GetPropertyRequest {
  // The name of the property to retrieve.
  // Format: projects/*/properties/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Property"
    }
  ];
}

// Request message for CreateProperty.
message CreatePropertyRequest {
  // The parent, which owns this collection of properties.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Property"}
  ];
  // The property to create.
  Property property = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the property, which will become the final component of
  // the property's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string property_id = 3;
}

// Request message for UpdateProperty.
message UpdatePropertyRequest {
  // The property to update.
  //
  // The `name` field is used to identify the property to update.
  // Format: projects/*/properties/*
  Property property = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteProperty.
message DeletePropertyRequest {
  // The name of the property to delete.
  // Format: projects/*/properties/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Property"}
  ];
}

// Request message for ListLabels.
message ListLabelsRequest {
  // The parent, which owns this collection of labels.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Label"}
  ];
  // The maximum number of labels to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListLabels` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListLabels` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListLabels.
message ListLabelsResponse {
  // The labels from the specified publisher.
  repeated Label labels = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetLabel.
message GetLabelRequest {
  // The name of the label to retrieve.
  // Format: projects/*/labels/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Label"
    }
  ];
}

// Request message for CreateLabel.
message CreateLabelRequest {
  // The parent, which owns this collection of labels.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Label"}
  ];
  // The label to create.
  Label label = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the label, which will become the final component of
  // the label's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string label_id = 3;
}

// Request message for UpdateLabel.
message UpdateLabelRequest {
  // The label to update.
  //
  // The `name` field is used to identify the label to update.
  // Format: projects/*/labels/*
  Label label = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteLabel.
message DeleteLabelRequest {
  // The name of the label to delete.
  // Format: projects/*/labels/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "registry.googleapis.com/Label"}
  ];
}

